import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { List, ListItemButton, Typography, styled, Box, Divider, IconButton } from '@mui/material';
import { ChevronLeft, ChevronRight } from '@mui/icons-material';
import MenuIcon from '@mui/icons-material/Menu';

// 스타일링된 ListItemButton을 위한 컴포넌트
const StyledListItemButton = styled(ListItemButton)(({ theme, active }) => ({
    borderRadius: theme.shape.borderRadius,
    padding: theme.spacing(2),
    backgroundColor: active ? theme.palette.primary.main : 'inherit',
    color: active ? theme.palette.primary.contrastText : 'inherit',
    boxShadow: active ? `0 4px 8px ${theme.palette.grey[700]}` : 'none',
    '&:hover': {
        backgroundColor: theme.palette.primary.main,
        color: theme.palette.primary.contrastText,
        boxShadow: `0 4px 8px ${theme.palette.grey[700]}`,
    },
}));

// 헤더를 위한 스타일링된 컴포넌트
const Header = styled(Box)(({ theme }) => ({
    padding: theme.spacing(2),
    borderBottom: `1px solid ${theme.palette.divider}`,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
}));

const PentestNavbar = () => {
    const [isCollapsed, setIsCollapsed] = useState(false); // 메뉴바의 접힘 상태를 관리
    const navigate = useNavigate();
    const location = useLocation();

    const toggleCollapse = () => {
        setIsCollapsed(!isCollapsed);
    };
    // const [open, setOpen] = useState(true);

    return (
        <Box>                          
            <Box
                display="flex"
                flexDirection="column"
                minHeight="100vh"
                bgcolor="gray" // 어두운 색상으로 변경
                color="white"
                p={2}
                sx={{
                    width: isCollapsed ? '80px' : '260px', // 접힘 상태에 따른 너비 조절
                transition: 'width 0.3s ease-in-out', // 부드러운 애니메이션 추가
                    borderRight: '1px solid #34495E',
                    boxShadow: '2px 0 8px rgba(0,0,0,0.2)', // 약간의 그림자 추가
                position: 'relative',
                }}
            >
                <Header>
                {!isCollapsed && (
                        <Typography
                            variant="h5"
                            component="h1"
                            sx={{
                                fontWeight: 'bold',
                                color: 'white',
                            }}
                        >
                            Pentest Menu
                        </Typography>
                )}
                    {/* <IconButton aria-label="clear" sx={{ mr: 1, }} onClick={()=>setOpen(false)} >
                        <MenuIcon/>
                    </IconButton> */}
                </Header>
                <Box flex={1}>
                    <List component="nav">
                        <StyledListItemButton onClick={() => navigate('info-agent')} active={location.pathname === '/pentest/info-agent'}>
                            <Typography variant="h5">
                            {isCollapsed ? 'A' : 'Agent Info'}
                        </Typography>
                        </StyledListItemButton>
                        <StyledListItemButton onClick={() => navigate('agent')} active={location.pathname === '/pentest/agent'}>
                            <Typography variant="h5">
                            {isCollapsed ? 'M' : 'MITRE ATT&CK'}
                        </Typography>
                        </StyledListItemButton>
                        <StyledListItemButton onClick={() => navigate('agentless')} active={location.pathname.includes('agentless')}>
                            <Typography variant="h5">
                            {isCollapsed ? 'C' : 'CVE ATTACK'}
                        </Typography>
                        </StyledListItemButton>
                        <StyledListItemButton onClick={() => navigate('result')} active={location.pathname.includes('result')}>
                            <Typography variant="h5">
                            {isCollapsed ? 'S' : 'Show Result'}
                        </Typography>
                        </StyledListItemButton>
                    </List>
                </Box>
                <Divider sx={{ my: 2, bgcolor: 'grey.700' }} />
                <Box p={2} textAlign="center">
                    <Typography variant="caption" color="grey.400" sx={{ display: isCollapsed ? 'none' : 'block' }}>
                        © 2024 Your Company
                    </Typography>
                </Box>
            <IconButton
                onClick={toggleCollapse}
                sx={{
                    position: 'absolute',
                    top: '50%',
                    right: '-20px',
                    transform: 'translateY(-50%)',
                    backgroundColor: '#FFFFFFD0',
                    borderRadius: '50%',
                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.3)',
                }}
            >
                {isCollapsed ? <ChevronRight /> : <ChevronLeft />}
            </IconButton>
            </Box>
        </Box>
    );
};

export default PentestNavbar;
