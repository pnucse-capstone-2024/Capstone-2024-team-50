import * as React from 'react';
import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, ToggleButtonGroup, ToggleButton, Box, IconButton } from '@mui/material';
import ContentCopyIcon from '@mui/icons-material/ContentCopy';

import { fetchGetConnectAgentCommand } from '../../../services/AgentServices';

export default function AddAgentDialog({uid}) {
  const [open, setOpen] = React.useState(false);
  const [platform, setPlatform] = React.useState('windows');
  const [copied, setCopied] = React.useState(false);
  const [connectCommand, setConnectCommand] = React.useState({});

  React.useEffect(() => {
    fetchGetConnectAgentCommand(uid)
      .then(response => response.json())
      .then(data => {
        setConnectCommand(data);
        console.log('Fetched command:', data);
      })
      .catch(error => {
        console.error('Error fetching command:', error);
      });
  }, []);

  const handleToggleChange = (event, newAlignment) => {
    setPlatform(newAlignment);
  };

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  const handleCopy = () => {
    let command = '';
    if (platform === 'windows') {
      command = connectCommand.windows;
    } else if (platform === 'linux') {
      command = connectCommand.linux;
    } else if (platform === 'mac') {
      command = connectCommand.mac;
    }
  
    // Fallback using input element
    const input = document.createElement('input');
    input.value = command;
    document.body.appendChild(input);
    input.select();
    
    try {
      document.execCommand('copy');
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      console.error('Oops, unable to copy', err);
    }
  
    document.body.removeChild(input);
  };
  

  return (
    <React.Fragment>
      <Button variant='contained' sx={{ ml: 2, bgcolor: '#3A74CD', '&:hover': { bgcolor: '#0056a0' } }} onClick={handleClickOpen}>
        연결
      </Button>
      <Dialog
        open={open}
        onClose={handleClose}
        aria-labelledby="alert-dialog-title"
        aria-describedby="alert-dialog-description"
        sx={{ '& .MuiDialog-paper': { bgcolor: '#f9f9f9', borderRadius: 2, boxShadow: 24, minWidth:'50%' } }}
      >
        <DialogTitle id="alert-dialog-title">
          <Typography variant='h5' sx={{ fontWeight: 'bold', color: '#3A74CD' }}>
            Agent 연결
          </Typography>
        </DialogTitle>
        <DialogContent>
          <DialogContentText id="alert-dialog-description" sx={{ mb: 2 }}>
            해당하는 플랫폼을 선택해주세요.
          </DialogContentText>
          <ToggleButtonGroup
            color="primary"
            value={platform}
            exclusive
            onChange={handleToggleChange}
            aria-label="Platform"
            sx={{ mb: 2 }}
          >
            <ToggleButton value="windows" aria-label="windows">
              Windows
            </ToggleButton>
            <ToggleButton value="linux" aria-label="linux">
              Linux
            </ToggleButton>
            <ToggleButton value="mac" aria-label="mac">
              Mac
            </ToggleButton>
          </ToggleButtonGroup>

          <DialogContentText id="alert-dialog-description" sx={{ mb: 2 }}>
            아래의 명령어를 Shell에 입력해주세요.
            <br />
            Windows - powershell
            <br />
            Linux/Mac - bash
          </DialogContentText>

          <Box
            sx={{
              bgcolor: '#272727',
              borderRadius: 1,
              border: '1px solid #444',
              pt:5,
              pr:5,
              pl:2,
              pb:2,
              mt: 2,
              fontFamily: 'monospace',
              whiteSpace: 'pre-wrap',
              overflowWrap: 'break-word',
              position: 'relative',
              color: '#e0e0e0',
              '&:hover': {
                borderColor: '#3A74CD',
              },
            }}
          >
            <IconButton
              onClick={handleCopy}
              sx={{
                position: 'absolute',
                top: 8,
                right: 8,
                color: '#3A74CD',
                '&:hover': {
                  backgroundColor: '#e3f2fd',
                },
              }}
            >
              <ContentCopyIcon />
            </IconButton>
            <Typography variant='body1'>
              {platform === 'windows' && connectCommand.windows}
              {platform === 'linux' && connectCommand.linux}
              {platform === 'mac' && connectCommand.mac}
            </Typography>
            {copied && (
              <Typography variant='body2' sx={{ mt: 1, color: 'green' }}>
                Copied to clipboard!
              </Typography>
            )}
          </Box>
        </DialogContent>
      </Dialog>
    </React.Fragment>
  );
}
