import * as React from 'react';
import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Tooltip } from '@mui/material';
import { fetchGetAttackTactics, fetchGetAttackTechniques } from '../../../services/AttackMapServices';

export default function AttackMap() {
    const [tactics, setTactics] = React.useState([]);
    const [groupedTechniques, setGroupedTechniques] = React.useState({});

    React.useEffect(() => {
        // Fetch tactics
        fetchGetAttackTactics().then((response) => {
            if (response.status === 200) {
                response.json().then((data) => {
                    setTactics(data);
                });
            }
        });

        // Fetch techniques
        fetchGetAttackTechniques().then((response) => {
            if (response.status === 200) {
                response.json().then((data) => {
                    // Group techniques by their taid
                    const grouped = data.reduce((acc, technique) => {
                        const taid = technique.taid;
                        if (!acc[taid]) {
                            acc[taid] = [];
                        }
                        acc[taid].push(technique);
                        return acc;
                    }, {});
                    setGroupedTechniques(grouped);
                });
            }
        });
    }, []);


    return (
        <TableContainer component={Paper}>
            <Table sx={{ minWidth: 650 }} aria-label="simple table">
                <TableHead>
                    <TableRow>
                        {tactics.map((tactic) => (
                            <TableCell key={tactic.taid} sx={{maxWidth:150}}>
                                <Typography variant='h6' sx={{ fontWeight: 'bold' }}>
                                    {tactic.name}
                                </Typography>
                            </TableCell>
                        ))}
                    </TableRow>
                </TableHead>
                <TableBody>
                    <TableRow>
                        {tactics.map((tactic) => (
                            <TableCell key={tactic.taid} sx={{maxWidth:150}}>
                                {groupedTechniques[tactic.taid] && groupedTechniques[tactic.taid].length > 0 ? (
                                    <ul>
                                        {groupedTechniques[tactic.taid].map((technique) => (
                                            <Tooltip
                                                key={technique.tid}
                                                title={
                                                    (
                                                        <>
                                                            <Typography>
                                                                {technique.tid}
                                                            </Typography>
                                                            <Typography>
                                                                {technique.name}
                                                            </Typography>
                                                        </>
                                                    )
                                                }
                                                arrow
                                                placement='right'
                                            >
                                                <li>
                                                    <Typography fontSize={16}>
                                                        {technique.name}
                                                    </Typography>
                                                </li>
                                            </Tooltip>
                                        ))}
                                    </ul>
                                ) : (
                                    <Typography variant='body2'>
                                    </Typography>
                                )}
                            </TableCell>
                        ))}
                    </TableRow>
                </TableBody>
            </Table>
        </TableContainer>
    );
}
